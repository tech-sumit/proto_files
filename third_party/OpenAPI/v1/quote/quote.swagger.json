{
  "swagger": "2.0",
  "info": {
    "title": "v1/quote/quote.proto",
    "version": "1.0"
  },
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/quote": {
      "get": {
        "summary": "Get Quote",
        "description": "Get Quotes from server",
        "operationId": "QuoteService_GetQuote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/quoteGetQuoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "quoteId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "message",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Quotes"
        ]
      },
      "delete": {
        "summary": "Delete Quote",
        "description": "Delete Quotes from server memory",
        "operationId": "QuoteService_DeleteQuote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/quoteDeleteQuoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/quoteDeleteQuoteRequest"
            }
          }
        ],
        "tags": [
          "Quotes"
        ]
      },
      "post": {
        "summary": "Create Quote",
        "description": "Create Quotes using this call",
        "operationId": "QuoteService_CreateQuote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/quoteCreateQuoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/quoteCreateQuoteRequest"
            }
          }
        ],
        "tags": [
          "Quotes"
        ]
      },
      "put": {
        "summary": "Get Quote",
        "description": "Update Quotes using this call",
        "operationId": "QuoteService_UpdateQuote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/quoteUpdateQuoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/quoteUpdateQuoteRequest"
            }
          }
        ],
        "tags": [
          "Quotes"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "quoteCreateQuoteRequest": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "quoteCreateQuoteResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "quoteId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "quoteDeleteQuoteRequest": {
      "type": "object",
      "properties": {
        "quoteId": {
          "type": "string"
        }
      }
    },
    "quoteDeleteQuoteResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "quoteGetQuoteResponse": {
      "type": "object",
      "properties": {
        "quotes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/quoteQuote"
          }
        }
      }
    },
    "quoteQuote": {
      "type": "object",
      "properties": {
        "quoteId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "quoteUpdateQuoteRequest": {
      "type": "object",
      "properties": {
        "quoteId": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "quoteUpdateQuoteResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ],
  "externalDocs": {
    "description": "gRPC-gateway boilerplate",
    "url": "https://ps_boiler/webserver"
  }
}
